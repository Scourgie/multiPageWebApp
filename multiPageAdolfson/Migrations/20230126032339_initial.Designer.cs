// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using multiPageAdolfson.Models;

#nullable disable

namespace multiPageAdolfson.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20230126032339_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("multiPageAdolfson.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            Name = "Antony Adolfson",
                            address = "123 Main Street",
                            note = "Example of additional information",
                            phoneNumber = 1234567890L
                        },
                        new
                        {
                            ContactId = 2,
                            Name = "Brindle",
                            address = "456 Harvest Rd",
                            note = "An amazing cat.",
                            phoneNumber = 1111111111L
                        },
                        new
                        {
                            ContactId = 3,
                            Name = "VooDoo",
                            address = "789 Best Cat Ave",
                            note = "Fat, and a little troublemaker.",
                            phoneNumber = 4564654566L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
